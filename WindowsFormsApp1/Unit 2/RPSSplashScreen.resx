<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>